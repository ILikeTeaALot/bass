//! I'm not sure whether I'm going to use these or how useful they will be...

use bass_sys::*;
use bitflags::bitflags;

macro_rules! SPEAKER_xxx {
	() => {
		const SPEAKER_FRONT = BASS_SPEAKER_FRONT;
		const SPEAKER_REAR = BASS_SPEAKER_REAR;
		const SPEAKER_CENLFE = BASS_SPEAKER_CENLFE;
		const SPEAKER_SIDE = BASS_SPEAKER_SIDE;
		const SPEAKER_LEFT = BASS_SPEAKER_LEFT;
		const SPEAKER_RIGHT = BASS_SPEAKER_RIGHT;
		const SPEAKER_FRONTLEFT = BASS_SPEAKER_FRONTLEFT;
		const SPEAKER_FRONTRIGHT = BASS_SPEAKER_FRONTRIGHT;
		const SPEAKER_REARLEFT = BASS_SPEAKER_REARLEFT;
		const SPEAKER_REARRIGHT = BASS_SPEAKER_REARRIGHT;
		const SPEAKER_CENTER = BASS_SPEAKER_CENTER;
		const SPEAKER_LFE = BASS_SPEAKER_LFE;
		const SPEAKER_SIDELEFT = BASS_SPEAKER_SIDELEFT;
		const SPEAKER_SIDERIGHT = BASS_SPEAKER_SIDERIGHT;
		const SPEAKER_REAR2 = BASS_SPEAKER_REAR2;
		const SPEAKER_REAR2LEFT = BASS_SPEAKER_REAR2LEFT;
		const SPEAKER_REAR2RIGHT = BASS_SPEAKER_REAR2RIGHT;
	};
}

bitflags! {
	pub struct StreamFileUserFlags: DWORD {
		const SAMPLE_FLOAT = BASS_SAMPLE_FLOAT;
		const SAMPLE_MONO = BASS_SAMPLE_MONO;
		const SAMPLE_3D = BASS_SAMPLE_3D;
		const LOOP = BASS_SAMPLE_LOOP;
		const PRESCAN = BASS_STREAM_PRESCAN;
		const RESTRATE = BASS_STREAM_RESTRATE;
		const BLOCK = BASS_STREAM_BLOCK;
		const AUTOFREE = BASS_STREAM_AUTOFREE;
		const DECODE = BASS_STREAM_DECODE;
		const ASYNCFILE = BASS_ASYNCFILE;
		// Speaker Assignment Flags
		const SPEAKER_FRONT = BASS_SPEAKER_FRONT;
		const SPEAKER_REAR = BASS_SPEAKER_REAR;
		const SPEAKER_CENLFE = BASS_SPEAKER_CENLFE;
		const SPEAKER_SIDE = BASS_SPEAKER_SIDE;
		const SPEAKER_LEFT = BASS_SPEAKER_LEFT;
		const SPEAKER_RIGHT = BASS_SPEAKER_RIGHT;
		const SPEAKER_FRONTLEFT = BASS_SPEAKER_FRONTLEFT;
		const SPEAKER_FRONTRIGHT = BASS_SPEAKER_FRONTRIGHT;
		const SPEAKER_REARLEFT = BASS_SPEAKER_REARLEFT;
		const SPEAKER_REARRIGHT = BASS_SPEAKER_REARRIGHT;
		const SPEAKER_CENTER = BASS_SPEAKER_CENTER;
		const SPEAKER_LFE = BASS_SPEAKER_LFE;
		const SPEAKER_SIDELEFT = BASS_SPEAKER_SIDELEFT;
		const SPEAKER_SIDERIGHT = BASS_SPEAKER_SIDERIGHT;
		const SPEAKER_REAR2 = BASS_SPEAKER_REAR2;
		const SPEAKER_REAR2LEFT = BASS_SPEAKER_REAR2LEFT;
		const SPEAKER_REAR2RIGHT = BASS_SPEAKER_REAR2RIGHT;
	}
}

bitflags! {
	pub struct StreamFileFlags: DWORD {
		const SAMPLE_FLOAT = BASS_SAMPLE_FLOAT;
		const SAMPLE_MONO = BASS_SAMPLE_MONO;
		const SAMPLE_3D = BASS_SAMPLE_3D;
		const LOOP = BASS_SAMPLE_LOOP;
		const PRESCAN = BASS_STREAM_PRESCAN;
		const AUTOFREE = BASS_STREAM_AUTOFREE;
		const DECODE = BASS_STREAM_DECODE;
		const ASYNCFILE = BASS_ASYNCFILE;
		// Speaker Assignment Flags
		const SPEAKER_FRONT = BASS_SPEAKER_FRONT;
		const SPEAKER_REAR = BASS_SPEAKER_REAR;
		const SPEAKER_CENLFE = BASS_SPEAKER_CENLFE;
		const SPEAKER_SIDE = BASS_SPEAKER_SIDE;
		const SPEAKER_LEFT = BASS_SPEAKER_LEFT;
		const SPEAKER_RIGHT = BASS_SPEAKER_RIGHT;
		const SPEAKER_FRONTLEFT = BASS_SPEAKER_FRONTLEFT;
		const SPEAKER_FRONTRIGHT = BASS_SPEAKER_FRONTRIGHT;
		const SPEAKER_REARLEFT = BASS_SPEAKER_REARLEFT;
		const SPEAKER_REARRIGHT = BASS_SPEAKER_REARRIGHT;
		const SPEAKER_CENTER = BASS_SPEAKER_CENTER;
		const SPEAKER_LFE = BASS_SPEAKER_LFE;
		const SPEAKER_SIDELEFT = BASS_SPEAKER_SIDELEFT;
		const SPEAKER_SIDERIGHT = BASS_SPEAKER_SIDERIGHT;
		const SPEAKER_REAR2 = BASS_SPEAKER_REAR2;
		const SPEAKER_REAR2LEFT = BASS_SPEAKER_REAR2LEFT;
		const SPEAKER_REAR2RIGHT = BASS_SPEAKER_REAR2RIGHT;
	}
}

bitflags! {
	pub struct StreamURLFlags: DWORD {
		const SAMPLE_FLOAT = BASS_SAMPLE_FLOAT;
		const SAMPLE_MONO = BASS_SAMPLE_MONO;
		const SAMPLE_3D = BASS_SAMPLE_3D;
		const LOOP = BASS_SAMPLE_LOOP;
		const RESTRATE = BASS_STREAM_RESTRATE;
		const BLOCK = BASS_STREAM_BLOCK;
		const STATUS = BASS_STREAM_STATUS;
		const AUTOFREE = BASS_STREAM_AUTOFREE;
		const DECODE = BASS_STREAM_DECODE;
		const ASYNCFILE = BASS_ASYNCFILE;
		// Speaker Assignment Flags
		const SPEAKER_FRONT = BASS_SPEAKER_FRONT;
		const SPEAKER_REAR = BASS_SPEAKER_REAR;
		const SPEAKER_CENLFE = BASS_SPEAKER_CENLFE;
		const SPEAKER_SIDE = BASS_SPEAKER_SIDE;
		const SPEAKER_LEFT = BASS_SPEAKER_LEFT;
		const SPEAKER_RIGHT = BASS_SPEAKER_RIGHT;
		const SPEAKER_FRONTLEFT = BASS_SPEAKER_FRONTLEFT;
		const SPEAKER_FRONTRIGHT = BASS_SPEAKER_FRONTRIGHT;
		const SPEAKER_REARLEFT = BASS_SPEAKER_REARLEFT;
		const SPEAKER_REARRIGHT = BASS_SPEAKER_REARRIGHT;
		const SPEAKER_CENTER = BASS_SPEAKER_CENTER;
		const SPEAKER_LFE = BASS_SPEAKER_LFE;
		const SPEAKER_SIDELEFT = BASS_SPEAKER_SIDELEFT;
		const SPEAKER_SIDERIGHT = BASS_SPEAKER_SIDERIGHT;
		const SPEAKER_REAR2 = BASS_SPEAKER_REAR2;
		const SPEAKER_REAR2LEFT = BASS_SPEAKER_REAR2LEFT;
		const SPEAKER_REAR2RIGHT = BASS_SPEAKER_REAR2RIGHT;
	}
}